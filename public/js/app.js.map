{"version":3,"sources":["app.js","APIInteceptor.js","dashboardService.js","directives.js","generalService.js","services.js","userService.js","AcceptedCtrl.js","AdminCtrl.js","LoginCtrl.js","RejectedCtrl.js","dashboardCtrl.js","datepickerCtrl.js","signUpCtrl.js","timepickerCtrl.js"],"names":[],"mappingspDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtfpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzphpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["\n/**************************\n Initialize the Angular App\n **************************/\n\nvar app = angular.module(\"app\", [\n    \"ui.router\", \"ngAnimate\", \"ui.bootstrap\", \"flash\", \"angucomplete\", \"angular-loading-bar\",\n    \"ngStorage\", \"satellizer\",\n    \"general.service\",\n    \"APIInterceptor\",\n    \"dashboard.service\",\n    \"AdminAppCtrl\",\n    \"datepicker.controller\",\n    \"timepicker.controller\",\n    \"signUp.controller\",\n    \"dashboard.controller\",\n    \"LoginCtrl\",\n    \"AcceptedCtrl\",\n    \"RejectedCtrl\"]).run([\"$rootScope\", \"$state\",\n    function ($rootScope, $state) {\n\n      $rootScope.$on('$stateChangeStart', function(event, toState) {\n        var login = toState.data.requiresLogin && (JSON.parse(localStorage.getItem('user')) !== null);\n\n        if(login) {\n          $rootScope.authenticated = true;\n          $rootScope.currentUser = JSON.parse(localStorage.getItem('user'));\n          if(toState.name === \"login\") {\n            $state.go('admin.dashboard');\n            event.preventDefault();\n            return;\n          }\n        }\n\n        if(!login) {\n          $state.go('login');\n          event.preventDefault();\n          return;\n        }\n      });\n\n      angular.element(document).ready(function(){\n          setTimeout(function(){\n              $('.page-loading-overlay').addClass(\"loaded\");\n              $('.load_circle_wrapper').addClass(\"loaded\");\n          },1000);\n      });\n\n    }])\n    .constant('appConfig', {\n      url : 'http://104.236.8.148'\n    })\n    .config([\"appConfig\", \"$stateProvider\", \"$urlRouterProvider\", \"$authProvider\", \"$httpProvider\", \"$provide\",\n    function(appConfig, $stateProvider, $urlRouterProvider, $authProvider, $httpProvider, $provide) {\n\n      $httpProvider.interceptors.push('APIInterceptor');\n      $authProvider.loginUrl  = appConfig.url + '/api/adminauth';\n      $urlRouterProvider.otherwise(\"/dashboard\");\n\n      $stateProvider\n        .state('admin', {\n          url: '/admin',\n          templateUrl: 'templates/admin.html',\n          data: {requiresLogin : true }\n        })\n\n        .state('admin.dashboard', {\n          url: '/dashboard',\n          templateUrl: 'templates/admin.dashboard.html',\n          controller: 'dashbardCtrl',\n          data: {requiresLogin : true }\n        })\n\n        .state('admin.rejects', {\n          url: '/rejects',\n          templateUrl: 'templates/admin.rejected.html',\n          controller: 'RejectedCtrl as rejected',\n          data: {requiresLogin : true }\n        })\n\n        .state('admin.accepts', {\n          url: '/accepts',\n          templateUrl: 'templates/admin.accepted.html',\n          controller: 'AcceptedCtrl as accepted',\n          data: {requiresLogin : true }\n        })\n\n        .state('admin.locationQueries', {\n          url: '/locationqueries',\n          templateUrl: 'templates/admin.locationqueries.html',\n          controller: 'LocationQueriesCtrl as locationquery',\n          data: {requireLogin : true }\n        })\n\n        .state('login', {\n          url: '/login',\n          templateUrl: 'templates/login.html',\n          controller: 'LoginCtrl as login'\n        })\n\n        .state('logout', {\n          url: '/login',\n          templateUrl: 'templates/login.html'\n        });\n    }\n]);\n","(function() {\n\n  angular.module('APIInterceptor', []).service('APIInterceptor', [\"$rootScope\", \"$q\", \"$injector\", APIInterceptor]);\n\n  function APIInterceptor($rootScope, $q, $injector) {\n    vm = this;\n    //return vm;\n    vm.request = function(config) {\n      config.headers.Authorization = \"Bearer \"+ localStorage.satellizer_token;\n      console.log(config);\n      return config;\n    };\n\n    vm.responseError = function(rejection) {\n        console.log(rejection);\n        var $state = $injector.get('$state');\n        var rejectionReasons = ['token_not_provided', 'token_expired', 'token_absent', 'token_invalid'];\n\n        angular.forEach(rejectionReasons, function(value, key) {\n          if(rejection.data.error === value) {\n\n            localStorage.removeItem('user');\n            $state.go('login');\n\n          /*  var $auth = $injector.get('$auth');\n            var $http = $injector.get('$http');\n            var $state = $injector.get('$state');\n            var deferred = $q.defer();\n            var user = JSON.parse(localStorage.getItem('user'));\n            var credentials = {\n              email: user.email,\n              password: user.password\n            };\n\n            if(value === 'token_expired') {\n\n              // update token\n              $auth.login(credentials).then(deferred.resolve, deferred.reject);\n              return deferred.promise.then(function(data) {\n                return $http(rejection.config);\n              });\n            } else {\n              localStorage.removeItem('user');\n              $state.go('login');\n            } */\n          }\n        });\n        return $q.reject(rejection);\n    };\n  }\n\n})();\n","(function() {\n\n  angular.module('dashboard.service', []).factory('dashboard', ['$http', '$q', '$timeout', dashboard]);\n\n    function dashboard($http, $q, $timeout) {\n      //var url; dashboard service url\n      var factory = {\n            getMusicData : getMusicData,\n            getEventHistoryData : getEventHistoryData,\n            getHighestTipsData : getHighestTipsData\n          },\n          songs = [\n            { name: \"Money\", artist: \"Michael Jackson\", request_amount: 4 },\n            { name: \"What They Say\", artist: \"Maya Jane Cole\", request_amount: 12 },\n            { name: \"Look Around You\", artist: \"Chopsticks\", request_amount: 8 }\n          ],\n          event_data = [],\n          guest_data = {};\n\n      return factory;\n\n      function getMusicData() {\n        // queue music data\n        var deferred = $q.defer();\n\n        $timeout(function() {\n          deferred.resolve(songs);\n        }, 500);\n\n        return deferred.promise;\n      }\n\n      function getEventHistoryData() {}\n\n      function getHighestTipsData() {}\n    }\n\n})();\n","\n\n/*\n Charting directives\n Provides custom directives for charting elements\n */\n\nangular.module(\"app.chart.directives\", []).directive(\"gaugeChart\", [\n        function() {\n            return {\n                scope: {\n                    gaugeData: \"=\",\n                    gaugeOptions: \"=\"\n                },\n                link: function(scope, ele) {\n                    var data, gauge, options;\n\n                    data = scope.gaugeData;\n                        options = scope.gaugeOptions;\n\n                        gauge = new Gauge(ele[0]).setOptions(options);\n                        gauge.maxValue = data.maxValue;\n                        gauge.animationSpeed = data.animationSpeed;\n                        gauge.set(data.val);\n                }\n            };\n        }\n    ]).directive('chart', function () {\n        var baseWidth = 600;\n        var baseHeight = 400;\n\n        return {\n            restrict: 'E',\n            template: '<canvas></canvas>',\n            scope: {\n                chartObject: \"=value\",\n                data: \"=\"\n            },\n            link: function (scope, element, attrs) {\n                var canvas  = element.find('canvas')[0],\n                    context = canvas.getContext('2d'),\n                    chart;\n\n                var options = {\n                    type:   attrs.type   || \"Line\",\n                    width:  attrs.width  || baseWidth,\n                    height: attrs.height || baseHeight\n                };\n                canvas.width = options.width;\n                canvas.height = options.height;\n                chart = new Chart(context);\n\n                var chartType = attrs.type;\n\n                chart[chartType](scope.data, options);\n\n                //Update when charts data changes\n                scope.$watch(function() { return scope.chartObject; }, function(value) {\n                    if(!value) return;\n                    var chartType = options.type;\n                    chart[chartType](scope.chartObject.data, scope.chartObject.options);\n                });\n            }\n        };\n    }).directive(\"flotChart\", [\n        function() {\n            return {\n                restrict: \"A\",\n                scope: {\n                    data: \"=\",\n                    options: \"=\"\n                },\n                link: function(scope, ele) {\n                    var data, options, plot;\n\n\n                    // hard-code color indices to prevent them from shifting as\n                    // countries are turned on/off\n\n                    var datasets;\n\n                    datasets = scope.data;\n\n                    var i = 0;\n                    $.each(datasets, function(key, val) {\n                        val.color = i;\n                        ++i;\n                    });\n\n                    // insert checkboxes\n\n                    if($(ele[0]).parent().find(\".choices\").length > 0){\n\n                        // insert checkboxes\n                        var choiceContainer = $(ele[0]).parent().find(\".choices\");\n\n                        choiceContainer.html(\"\");\n\n                        $.each(datasets, function(key, val) {\n\n                            choiceContainer.append(\"<br/><div class='choice-item'><label for='id\" + key + \"' class='ui-checkbox'>\" +\n                            \"<input name='\" + key +\n                            \"' type='checkbox' id='id\" + key + \"' checked='checked' value='option1'>\" +\n                            \"<span>\" + val.label + \"</span>\" +\n                            \"</label></div>\");\n\n                        });\n\n                        var plotAccordingToChoices = function() {\n\n                            var data_to_push = [];\n\n                            choiceContainer.find(\"input:checked\").each(function () {\n                                var key = $(this).attr(\"name\");\n                                if (key && datasets[key]) {\n                                    data_to_push.push(datasets[key]);\n                                }\n                            });\n\n                            if (data_to_push.length > 0) {\n                                $.plot(ele[0], data_to_push, scope.options);\n                            }\n                        };\n\n                        choiceContainer.find(\"input\").click(plotAccordingToChoices);\n\n                    }\n\n\n\n                    //plotAccordingToChoices();\n\n                    return data = scope.data, options = scope.options, plot = $.plot(ele[0], data, options);\n                }\n            };\n        }\n    ]).directive(\"flotChartRealtime\", [\n        function() {\n            return {\n                restrict: \"A\",\n                link: function(scope, ele) {\n                    var data, getRandomData, plot, totalPoints, update, updateInterval;\n                    return data = [], totalPoints = 300, getRandomData = function() {\n                        var i, prev, res, y;\n                        for (data.length > 0 && (data = data.slice(1)); data.length < totalPoints;){\n                            if(data.length > 0){\n                                prev = data[data.length - 1];\n                            }\n                            else{\n                                prev = 50;\n                            }\n                            y = prev + 10 * Math.random() - 5;\n                            if(0 > y){\n                                y = 0;\n                            }else{\n                                if(y > 100){\n                                    y = 100;\n                                }\n                            }\n                            data.push(y);\n                        }\n                        for (res = [], i = 0; i < data.length;){\n                            res.push([i, data[i]]);\n                            ++i;\n                        }\n                        return res;\n                    }, update = function() {\n                        plot.setData([getRandomData()]);\n                        plot.draw();\n                        setTimeout(update, updateInterval);\n                    }, data = [], totalPoints = 300, updateInterval = 200, plot = $.plot(ele[0], [getRandomData()], {\n                        series: {\n                            lines: {\n                                show: !0,\n                                fill: !0\n                            },\n                            shadowSize: 0\n                        },\n                        yaxis: {\n                            min: 0,\n                            max: 100,\n                            show: !0,\n                            color:\"#f5f5f5\"\n                        },\n                        xaxis: {\n                            show: !0,\n                            color:\"#f5f5f5\"\n                        },\n                        grid: {\n                            hoverable: !0,\n                            borderWidth: 1,\n                            borderColor: \"#fff\"\n                        },\n                        colors: [\"#383d43\"]\n                    }), update();\n                }\n            };\n        }\n    ]).directive(\"sparkline\", [\n        function() {\n            return {\n                scope: {\n                    sparkData: \"=\",\n                    sparkOptions: \"=\"\n                },\n                link: function(scope, ele) {\n                    var data, options, sparkResize, sparklineDraw;\n\n                    data = scope.sparkData;\n                        options = scope.sparkOptions;\n                        sparkResize = void 0;\n                        sparklineDraw = function() {\n\n                            ele.sparkline(data, options);\n\n                        };\n                    $(window).resize(function() {\n                        return clearTimeout(sparkResize), sparkResize = setTimeout(sparklineDraw, 200);\n                    });\n                    sparklineDraw();\n                }\n            };\n        }\n    ]).directive(\"morrisChart\", [\n        function() {\n            return {\n                scope: {\n                    data: \"=\"\n                },\n                link: function(scope, ele, attrs) {\n                    var colors, data, func, options,chart;\n                    switch (data = scope.data, attrs.type) {\n                        case \"line\":\n                            return colors = void 0 === attrs.lineColors || \"\" === attrs.lineColors ? null : JSON.parse(attrs.lineColors), options = {\n                                element: ele[0],\n                                data: data,\n                                xkey: attrs.xkey,\n                                ykeys: JSON.parse(attrs.ykeys),\n                                labels: JSON.parse(attrs.labels),\n                                lineWidth: attrs.lineWidth || 2,\n                                lineColors: colors || [\"#0b62a4\", \"#7a92a3\", \"#4da74d\", \"#afd8f8\", \"#edc240\", \"#cb4b4b\", \"#9440ed\"]\n                            },chart = new Morris.Line(options),$(window).resize(function(){\n                                chart.redraw();\n                            });\n                        case \"area\":\n                            return colors = void 0 === attrs.lineColors || \"\" === attrs.lineColors ? null : JSON.parse(attrs.lineColors), options = {\n                                element: ele[0],\n                                data: data,\n                                xkey: attrs.xkey,\n                                ykeys: JSON.parse(attrs.ykeys),\n                                labels: JSON.parse(attrs.labels),\n                                lineWidth: attrs.lineWidth || 2,\n                                lineColors: colors || [\"#0b62a4\", \"#7a92a3\", \"#4da74d\", \"#afd8f8\", \"#edc240\", \"#cb4b4b\", \"#9440ed\"],\n                                behaveLikeLine: attrs.behaveLikeLine || !1,\n                                fillOpacity: attrs.fillOpacity || \"auto\",\n                                pointSize: attrs.pointSize || 4\n                            }, chart = new Morris.Area(options),$(window).resize(function(){\n                                chart.redraw();\n                            });\n                        case \"bar\":\n                            return colors = void 0 === attrs.barColors || \"\" === attrs.barColors ? null : JSON.parse(attrs.barColors), options = {\n                                element: ele[0],\n                                data: data,\n                                xkey: attrs.xkey,\n                                ykeys: JSON.parse(attrs.ykeys),\n                                labels: JSON.parse(attrs.labels),\n                                barColors: colors || [\"#0b62a4\", \"#7a92a3\", \"#4da74d\", \"#afd8f8\", \"#edc240\", \"#cb4b4b\", \"#9440ed\"],\n                                stacked: attrs.stacked || null\n                            }, chart = new Morris.Bar(options),$(window).resize(function(){\n                                //chart.redraw();\n                            });\n                        case \"donut\":\n                            /*jslint evil: true */\n                            return colors = void 0 === attrs.colors || \"\" === attrs.colors ? null : JSON.parse(attrs.colors), options = {\n                                element: ele[0],\n                                data: data,\n                                colors: colors || [\"#0B62A4\", \"#3980B5\", \"#679DC6\", \"#95BBD7\", \"#B0CCE1\", \"#095791\", \"#095085\", \"#083E67\", \"#052C48\", \"#042135\"]\n                            }, attrs.formatter && (func = new Function(\"y\", \"data\", attrs.formatter), options.formatter = func), chart = new Morris.Donut(options),$(window).resize(function(){\n                                chart.redraw();\n                            });\n                    }\n                }\n            };\n        }\n    ]);\n\n\n/*\n App custom Directives\n Custom directives for the app like custom background, minNavigation etc\n */\n\nangular.module(\"app.directives\", []).directive(\"imgHolder\", [\n        function() {\n            return {\n                link: function(scope, ele) {\n                    return Holder.run({\n                        images: ele[0]\n                    });\n                }\n            };\n        }\n    ]).directive(\"customBackground\", function() {\n        return {\n            controller: [\"$scope\", \"$element\", \"$location\",\n                function($scope, $element, $location) {\n                    var addBg, path;\n                    return path = function() {\n                        return $location.path();\n                    }, addBg = function(path) {\n                        switch ($element.removeClass(\"body-home body-special body-tasks body-lock\"), path) {\n                            case \"/\":\n                                return $element.addClass(\"body-home\");\n                            case \"/404\":\n                            case \"/pages/500\":\n                            case \"/pages/signin\":\n                            case \"/pages/signup\":\n                            case \"/pages/forgot\":\n                                return $element.addClass(\"body-special\");\n                            case \"/pages/lock-screen\":\n                                return $element.addClass(\"body-special body-lock\");\n                            case \"/tasks\":\n                                return $element.addClass(\"body-tasks\");\n                        }\n                    }, addBg($location.path()), $scope.$watch(path, function(newVal, oldVal) {\n                        return newVal !== oldVal ? addBg($location.path()) : void 0;\n                    });\n                }\n            ]\n        };\n    }).directive(\"uiColorSwitch\", [\n        function() {\n            return {\n                restrict: \"A\",\n                link: function(scope, ele) {\n                    return ele.find(\".color-option\").on(\"click\", function(event) {\n                        var $this, hrefUrl, style;\n                        if ($this = $(this), hrefUrl = void 0, style = $this.data(\"style\"), \"loulou\" === style){\n                            hrefUrl = \"styles/main.css\";\n                            $('link[href^=\"styles/main\"]').attr(\"href\", hrefUrl);\n                        }\n                        else {\n                            if (!style) return !1;\n                            style = \"-\" + style;\n                            hrefUrl = \"styles/main\" + style + \".css\";\n                            $('link[href^=\"styles/main\"]').attr(\"href\", hrefUrl);\n                        }\n                        return event.preventDefault();\n                    });\n                }\n            };\n        }\n    ]).directive(\"toggleMinNav\", [\"$rootScope\",\n        function($rootScope) {\n            return {\n                link: function(scope, ele) {\n                    var $content, $nav, $window, Timer, app, updateClass;\n\n                    return app = $(\"#app\"), $window = $(window), $nav = $(\"#nav-container\"), $content = $(\"#content\"), ele.on(\"click\", function(e) {\n\n                        if(app.hasClass(\"nav-min\")){\n                            app.removeClass(\"nav-min\");\n                        }\n                        else{\n                            app.addClass(\"nav-min\");\n                            $rootScope.$broadcast(\"minNav:enabled\");\n                            e.preventDefault();\n                        }\n\n                    }), Timer = void 0, updateClass = function() {\n                        var width;\n                        return width = $window.width(), 980 > width ? app.addClass(\"nav-min\") : void 0;\n                    },initResize = function() {\n                        var width;\n                        return width = $window.width(), 980 > width ? app.addClass(\"nav-min\") : app.removeClass(\"nav-min\");\n                    }, $window.resize(function() {\n                        var t;\n                        return clearTimeout(t), t = setTimeout(updateClass, 300);\n                    }),initResize();\n\n                }\n            };\n        }\n    ]).directive(\"collapseNav\", [\n        function() {\n            return {\n                link: function(scope, ele) {\n                    var $a, $aRest, $lists, $listsRest, app;\n                    return $lists = ele.find(\"ul\").parent(\"li\"),\n                        $lists.append('<i class=\"fa fa-arrow-circle-o-right icon-has-ul\"></i>'),\n                        $a = $lists.children(\"a\"),\n                        $listsRest = ele.children(\"li\").not($lists),\n                        $aRest = $listsRest.children(\"a\"),\n                        app = $(\"#app\"),\n                        $a.on(\"click\", function(event) {\n                            var $parent, $this;\n                            return app.hasClass(\"nav-min\") ? !1 : ($this = $(this),\n                                $parent = $this.parent(\"li\"),\n                                $lists.not($parent).removeClass(\"open\").find(\"ul\").slideUp(),\n                                $parent.toggleClass(\"open\").find(\"ul\").stop().slideToggle(), event.preventDefault());\n                        }), $aRest.on(\"click\", function() {\n                        return $lists.removeClass(\"open\").find(\"ul\").slideUp();\n                    }), scope.$on(\"minNav:enabled\", function() {\n                        return $lists.removeClass(\"open\").find(\"ul\").slideUp();\n                    });\n                }\n            };\n        }\n    ]).directive(\"highlightActive\", [\n        function() {\n            return {\n                controller: [\"$scope\", \"$element\", \"$attrs\", \"$location\",\n                    function($scope, $element, $attrs, $location) {\n                        var highlightActive, links, path;\n                        return links = $element.find(\"a\"), path = function() {\n                            return $location.path();\n                        }, highlightActive = function(links, path) {\n                            return path = \"#\" + path, angular.forEach(links, function(link) {\n                                var $li, $link, href;\n                                return $link = angular.element(link), $li = $link.parent(\"li\"), href = $link.attr(\"href\"), $li.hasClass(\"active\") && $li.removeClass(\"active\"), 0 === path.indexOf(href) ? $li.addClass(\"active\") : void 0;\n                            });\n                        }, highlightActive(links, $location.path()), $scope.$watch(path, function(newVal, oldVal) {\n                            return newVal !== oldVal ? highlightActive(links, $location.path()) : void 0;\n                        });\n                    }\n                ]\n            };\n        }\n    ]).directive(\"toggleOffCanvas\", [\n        function() {\n            return {\n                link: function(scope, ele) {\n                    return ele.on(\"click\", function() {\n                        return $(\"#app\").toggleClass(\"on-canvas\").toggleClass(\"nav-min\");\n                    });\n                }\n            };\n        }\n    ]).directive(\"slimScroll\", [\n        function() {\n            return {\n                link: function(scope, ele, attrs) {\n                    return ele.slimScroll({\n                        height: attrs.scrollHeight || \"100%\"\n                    });\n                }\n            };\n        }\n    ]).directive(\"goBack\", [\n        function() {\n            return {\n                restrict: \"A\",\n                controller: [\"$scope\", \"$element\", \"$window\",\n                    function($scope, $element, $window) {\n                        return $element.on(\"click\", function() {\n                            return $window.history.back();\n                        });\n                    }\n                ]\n            };\n        }\n    ]);\n\n\n\n/*\n App Form Ui Directives\n Custom directives for Form Ui elements\n */\n\nangular.module(\"app.ui.form.directives\", []).directive(\"uiRangeSlider\", [\n        function() {\n            return {\n                restrict: \"A\",\n                link: function(scope, ele) {\n                    return ele.slider();\n                }\n            };\n        }\n    ]).directive(\"uiFileUpload\", [\n        function() {\n            return {\n                restrict: \"A\",\n                link: function(scope, ele) {\n                    return ele.bootstrapFileInput();\n                }\n            };\n        }\n    ]).directive(\"uiSpinner\", [\n        function() {\n            return {\n                restrict: \"A\",\n                compile: function(ele) {\n                    return ele.addClass(\"ui-spinner\"), {\n                        post: function() {\n                            return ele.spinner();\n                        }\n                    };\n                }\n            };\n        }\n    ]).directive(\"uiWizardForm\", [\n        function() {\n            return {\n                link: function(scope, ele) {\n                    return ele.steps();\n                }\n            };\n        }\n    ]);\n\n","(function() {\n\n  angular.module('general.service', []).factory('general', ['appConfig', '$http', '$q', '$timeout', general]);\n\n  function general(appConfig, $http, $q, $timeout) {\n    var factory = {\n          getAcceptedPhotos : getAcceptedPhotos,\n          getApprovedPhotos : getApprovedPhotos,\n          getRejectedPhotos : getRejectedPhotos,\n          approvePhoto      : approvePhoto,\n          rejectPhoto       : rejectPhoto,\n          acceptPhoto       : acceptPhoto,\n          removePhoto       : removePhoto,\n          setPhotoToApprovalStatus : setPhotoToApprovalStatus,\n          getLocations : getLocations\n        };\n\n    return factory;\n\n    function getAcceptedPhotos(lastId, locations) {\n      var deferred = $q.defer(),\n          url = appConfig.url+\"/api/accepts/photos/100/\"+lastId+\"/\"+JSON.stringify(locations);\n      $http({\n        method: 'POST',\n        url: url\n      }).success(function(data) {\n        deferred.resolve(data);\n      }).error(function() {\n        deferred.reject('There was an error');\n      });\n\n      return deferred.promise;\n    }\n\n    function getApprovedPhotos(lastId, locations) {\n      console.log(JSON.stringify(locations));\n      var deferred = $q.defer(),\n          url = appConfig.url+\"/api/accepts/approvedphotos/100/\"+lastId+\"/\"+JSON.stringify(locations);\n      $http({\n        method: 'POST',\n        url: url\n      }).success(function(data) {\n        deferred.resolve(data);\n      }).error(function() {\n        deferred.reject('There was an error');\n      });\n\n      return deferred.promise;\n    }\n\n    function getRejectedPhotos(lastId, locations) {\n      var deferred = $q.defer(),\n          url = appConfig.url+\"/api/rejects/photos/100/\"+lastId+\"/\"+JSON.stringify(locations);\n      $http({\n        method: 'POST',\n        url: url\n      }).success(function(data) {\n        deferred.resolve(data);\n      }).error(function() {\n        deferred.reject('There was an error');\n      });\n\n      return deferred.promise;\n    }\n\n    function approvePhoto(id) {\n      var deferred = $q.defer(),\n          url = appConfig.url+\"/api/accepts/store/\"+id;\n      $http({\n        method: 'POST',\n        url: url,\n      }).success(function(data) {\n        deferred.resolve(data);\n      }).error(function() {\n        deferred.reject('There was an error');\n      });\n\n      return deferred.promise;\n    }\n\n    function rejectPhoto(id) {\n      console.log(id);\n      var deferred = $q.defer(),\n          url = appConfig.url+\"/api/accepts/transfer/\"+id;\n      $http({\n        method: 'POST',\n        url: url,\n      }).success(function(data) {\n        deferred.resolve(data);\n      }).error(function() {\n        deferred.reject('There was an error');\n      });\n\n      return deferred.promise;\n    }\n\n    function acceptPhoto(id) {\n      var deferred = $q.defer(),\n          url = appConfig.url+\"/api/rejects/transfer/\"+id;\n      $http({\n        method: 'POST',\n        url: url,\n      }).success(function(data) {\n        deferred.resolve(data);\n      }).error(function() {\n        deferred.reject('There was an error');\n      });\n\n      return deferred.promise;\n    }\n\n    function removePhoto(id) {\n      var deferred = $q.defer(),\n          url = appConfig.url+\"/api/rejects/\"+id;\n      $http({\n        method: 'DELETE',\n        url: url,\n      }).success(function(data) {\n        deferred.resolve(data);\n      }).error(function() {\n        deferred.reject('There was an error');\n      });\n\n      return deferred.promise;\n    }\n\n    function setPhotoToApprovalStatus(table, id) {\n      var deferred = $q.defer(),\n          url = appConfig.url+\"/api/\"+table+\"/approve/\"+id;\n\n      $http({\n        method: 'POST',\n        url: url,\n      }).success(function(data) {\n        deferred.resolve(data);\n      }).error(function() {\n        deferred.reject('There was an error');\n      });\n\n      return deferred.promise;\n    }\n\n    function getLocations() {\n      var deferred = $q.defer(),\n          url = appConfig.url+\"/api/accepts/locations\";\n\n      $http({\n        method: 'GET',\n        url: url,\n      }).success(function(data) {\n        deferred.resolve(data);\n      }).error(function() {\n        deferred.reject('There was an error');\n      });\n\n      return deferred.promise;\n    }\n  }\n})();\n","\n/**************************\n App ui Services\n\n loggit - Creates a logit type message for all logging\n\n **************************/\n(function() {\n\n  angular.module(\"app.ui.services\", []).factory(\"loggit\", loggit);\n\n      function loggit() {\n          var logIt;\n          return toastr.options = {\n              closeButton: !0,\n              positionClass: \"toast-top-right\",\n              timeOut: \"3000\"\n          }, logIt = function(message, type) {\n              return toastr[type](message);\n          }, {\n              log: function(message) {\n                  logIt(message, \"info\");\n              },\n              logWarning: function(message) {\n                  logIt(message, \"warning\");\n              },\n              logSuccess: function(message) {\n                  logIt(message, \"success\");\n              },\n              logError: function(message) {\n                  logIt(message, \"error\");\n              }\n          };\n      }\n\n})();\n","(function() {\n\n  angular.module(\"user.service\", []).factory(\"user\", ['$http', '$q', '$timeout', user]);\n\n  function user($http, $q, $timeout) {\n    var factory = {\n\n    },\n    userAccountInfo = {},\n    userSubscription = {},\n    userBillingInfo = {};\n\n\n    function getUserInfo() {\n      var deferred = $q.defer();\n\n      $timeout(function() {\n        deferred.resolve();\n      }, 500);\n\n      return deferred.promise;\n    }\n  }\n\n})();\n","(function() {\n\n  angular.module('AcceptedCtrl', []).controller('AcceptedCtrl', ['$rootScope', '$scope', '$filter', '$location', '$state', '$modal', 'general', 'Flash', AcceptedCtrl]);\n\n  function AcceptedCtrl($rootScope, $scope, $filter, $location, $state, $modal, general, Flash) {\n    var init;\n    var vm = this;\n\n    vm.filteredAccepts = [];\n    vm.searchKeywords = \"\";\n    vm.row = \"\";\n    vm.numPerPageOpt = [3, 5, 10, 20, 100];\n    vm.numPerPage = vm.numPerPageOpt[2];\n    vm.currentPage = 1;\n    vm.currentPageAccepts = [];\n    vm.newShow = {};\n    vm.next = false;\n    vm.accepts = [];\n    vm.lastPhotoId = null;\n    vm.pageTotal = 0;\n\n    vm.locations = null;\n    vm.newFilters = {};\n    vm.filters = {\n      approved : false,\n      location : {\n        country : \"\",\n        stateRegion : \"\",\n        city : \"\"\n      }\n    };\n\n    vm.totalApproves = 0;\n\n    vm.select = function(page) {\n        var end, start;\n\n        if (page > (vm.pageTotal-5)) {\n          if (vm.filters.approved) {\n            general.getApprovedPhotos(vm.lastPhotoId, vm.filters.location).then(vm.processPhotoData);\n          } else {\n            general.getAcceptedPhotos(vm.lastPhotoId, vm.filters.location).then(vm.processPhotoData);\n          }\n        }\n        return start = (page - 1) * vm.numPerPage, end = start + vm.numPerPage, vm.currentPageAccepts = vm.filteredAccepts.slice(start, end);\n    };\n\n    vm.search = function() {\n        return vm.filteredAccepts = $filter(\"filter\")(vm.accepts, vm.searchKeywords), vm.onFilterChange();\n    };\n\n    vm.onFilterChange = function() {\n        return vm.select(vm.currentPage), vm.currentPage = vm.currentPage, vm.row = \"\";\n    };\n\n    vm.onNumPerPageChange = function() {\n        return vm.select(1), vm.currentPage = 1;\n    };\n\n    vm.onOrderChange = function() {\n        return vm.select(1), vm.currentPage = 1;\n    };\n\n    vm.order = function(rowName) {\n        return vm.row !== rowName ? (vm.row = rowName, vm.filteredAccepts = $filter(\"orderBy\")(vm.acceptss, rowName), vm.onOrderChange()) : void 0;\n    };\n\n    vm.approvePhoto = function(id, idx) {\n      if ($rootScope.currentUser.permission_type === 1) {\n          general.approvePhoto(id).then(function(data) {\n            console.log(data);\n            var message = data;\n            Flash.create('success', message);\n            // remove this photo from the vm.accepted array\n            delete vm.accepts[idx];\n            currentPage = vm.currentPage;\n\n            //reset table\n            vm.search();\n            vm.currentPage = currentPage;\n          });\n      }\n\n      else if ($rootScope.currentUser.permission_type === 2) {\n          general.setPhotoToApprovalStatus(\"accepts\", id).then(function(data) {\n            console.log(data);\n            var message = data.message;\n            vm.totalApproves = data.total;\n            Flash.create('success', message);\n            // remove this photo from the vm.accepted array\n            delete vm.accepts[idx];\n            currentPage = vm.currentPage;\n\n            //reset table\n            vm.search();\n            vm.currentPage = currentPage;\n          });\n      }\n    };\n\n    vm.filterTable = function() {\n      console.log(vm.newFilters);\n      var approved = (vm.newFilters.approved == 0) ? false : true,\n          location = (vm.newFilters.selectedLocation !== undefined) ? vm.newFilters.selectedLocation.originalObject : undefined;\n\n      if (approved !== vm.filters.approved || location !== null) {\n          vm.filters.approved = approved;\n          vm.filters.location.country = (location != undefined) ? location.country : \"\";\n          vm.filters.location.stateRegion = (location != undefined) ? location.stateRegion : \"\";\n          vm.filters.location.city = (location != undefined) ? location.city : \"\";\n          vm.lastPhotoId = null;\n          vm.accepts = [];\n\n          if (approved) {\n            // query approved photos\n            general.getApprovedPhotos(vm.lastPhotoId, vm.filters.location).then(vm.processPhotoData);\n          } else {\n            // query all photos\n            general.getAcceptedPhotos(vm.lastPhotoId, vm.filters.location).then(vm.processPhotoData);\n          }\n      }\n    };\n\n    vm.rejectPhoto = function(id, idx) {\n      if ($rootScope.currentUser.permission_type === 1) {\n        general.rejectPhoto(id).then(function(data) {\n          console.log(data);\n          var message = data;\n          Flash.create('success', message);\n          // remove this photo from the vm.accepted array\n          delete vm.accepts[idx];\n          currentPage = vm.currentPage;\n\n          //reset table\n          vm.search();\n          vm.currentPage = currentPage;\n        });\n      }\n    };\n\n    vm.processPhotoData = function(data) {\n      var photo_url = \"\";\n      var accepts = data.acceptedPhotos;\n      vm.totalApproves = data.totalApproves;\n\n      for (var i=0; i<accepts.length; i++) {\n        accepts[i].photo_data = JSON.parse(accepts[i].photo_data);\n        photo_url = \"https://farm\" + accepts[i].photo_data.farm + \".staticflickr.com/\" + accepts[i].photo_data.server + \"/\" + accepts[i].photo_data.id + \"_\" + accepts[i].photo_data.secret + \".jpg\";\n        console.log(data);\n        accepts[i].approved = (accepts[i].approved !== null) ? Boolean(accepts[i].approved) : false;\n        accepts[i].photo_data = photo_url;\n        accepts[i].index = i;\n\n        if (i === (accepts.length-1)) {\n          vm.lastPhotoId = accepts[i].id;\n        }\n        console.log(photo_url);\n      }\n\n      if (vm.accepts.length === 0) {\n          vm.accepts = accepts;\n      } else {\n          vm.accepts = vm.accepts.concat(accepts);\n      }\n      vm.pageTotal = vm.accepts.length / vm.numPerPage;\n      vm.search();\n    };\n\n    general.getAcceptedPhotos(vm.lastPhotoId, vm.filters.location).then(vm.processPhotoData);\n    general.getLocations().then(function(data) {\n      console.log(data);\n      vm.locations = data.locations;\n    });\n\n    (init = function() {\n        console.log(\"INIT\");\n        return vm.search(), vm.select(vm.currentPage);\n    });\n  }\n})();\n","angular.module(\"AdminAppCtrl\", []).controller(\"AdminAppCtrl\", [\"$scope\", \"$location\",\n        function($scope, $location) {\n            $scope.checkIfOwnPage = function() {\n\n                return _.contains([\"/404\", \"/pages/500\", \"/pages/login\", \"/pages/signin\", \"/pages/signin1\", \"/pages/signin2\", \"/pages/signup\", \"/pages/signup1\", \"/pages/signup2\", \"/pages/forgot\", \"/pages/lock-screen\"], $location.path());\n\n            };\n\n            $scope.info = {\n                theme_name: \"SOUNIORITY\",\n                user_name: \"Jane Doe\"\n            };\n\n\n        }\n    ]).controller(\"NavCtrl\", [\"$scope\",\n        function($scope) {\n\n            $scope.navInfo = {\n                tasks_number: 5,\n                widgets_number: 13\n            };\n\n        }\n    ]).controller(\"DashboardCtrl\", [\"$scope\",\n        function($scope) {\n\n\n        }\n    ]);\n","(function() {\n\n  angular.module('LoginCtrl', []).controller('LoginCtrl', ['appConfig', '$auth', '$state', '$http', '$rootScope', LoginCtrl]);\n\n    function LoginCtrl(appConfig, $auth, $state, $http, $rootScope) {\n      var vm = this;\n\n      vm.loginError = false;\n      vm.loginErrorText = null;\n\n      vm.login = function() {\n        var credentials = {\n          email: vm.email,\n          password: vm.password\n        };\n\n\n        $auth.login(credentials).then(function() {\n          return $http.get(appConfig.url + '/api/authenticate/user');\n\n        }, function(error) {\n          vm.loginError = true;\n          vm.loginErrorText = error.data.error;\n        }).then(function(response) {\n\n          var user = JSON.stringify(response.data.user);\n          localStorage.setItem('user', user);\n          $rootScope.authenticated = true;\n          $rootScope.currentUser = response.data.user;\n\n          console.log(response.data.user);\n          $state.go('admin.dashboard').then(function() {\n            angular.element(document).ready(function(){\n                setTimeout(function(){\n                    $('.page-loading-overlay').addClass(\"loaded\");\n                    $('.load_circle_wrapper').addClass(\"loaded\");\n                },1000);\n            });\n          });\n        });\n      };\n    }\n\n})();\n","(function() {\n\n  angular.module('RejectedCtrl', []).controller('RejectedCtrl', ['$rootScope', '$scope', '$filter', '$location', '$state', '$modal', 'general', 'Flash', RejectedCtrl]);\n\n  function RejectedCtrl($rootScope, $scope, $filter, $location, $state, $modal, general, Flash) {\n    var init;\n    var vm = this;\n\n    vm.filteredRejects = [];\n    vm.searchKeywords = \"\";\n    vm.row = \"\";\n    vm.numPerPageOpt = [3, 5, 10, 20, 100];\n    vm.numPerPage = vm.numPerPageOpt[2];\n    vm.currentPage = 1;\n    vm.currentPageRejects = [];\n    vm.newShow = {};\n    vm.next = false;\n    vm.rejects = [];\n    vm.lastPhotoId = null;\n    vm.pageTotal = 0;\n\n    vm.locations = null;\n    vm.newFilters = {};\n    vm.filters = {\n      approved : false,\n      location : {\n        country : \"\",\n        stateRegion : \"\",\n        city : \"\"\n      }\n    };\n\n    vm.totalApproves = 0;\n\n    vm.select = function(page) {\n        var end, start;\n\n        if (page > (vm.pageTotal-5)) {\n            if (vm.filters.approved) {\n              general.getApprovedPhotos(vm.lastPhotoId, vm.filters.location).then(vm.processPhotoData);\n            } else {\n              general.getRejectedPhotos(vm.lastPhotoId, vm.filters.location).then(vm.processPhotoData);\n            }\n        }\n        return start = (page - 1) * vm.numPerPage, end = start + vm.numPerPage, vm.currentPageRejects = vm.filteredRejects.slice(start, end);\n    };\n\n    vm.search = function() {\n        return vm.filteredRejects = $filter(\"filter\")(vm.rejects, vm.searchKeywords), vm.onFilterChange();\n    };\n\n    vm.onFilterChange = function() {\n        return vm.select(vm.currentPage), vm.currentPage = vm.currentPage, vm.row = \"\";\n    };\n\n    vm.onNumPerPageChange = function() {\n        return vm.select(1), vm.currentPage = 1;\n    };\n\n    vm.onOrderChange = function() {\n        return vm.select(1), vm.currentPage = 1;\n    };\n\n    vm.order = function(rowName) {\n        return vm.row !== rowName ? (vm.row = rowName, vm.filteredRejects = $filter(\"orderBy\")(vm.rejectss, rowName), vm.onOrderChange()) : void 0;\n    };\n\n    vm.acceptPhoto = function(id, idx) {\n      console.log(\"oijwiofwefjeofjieowfjiofjwefji\");\n      if ($rootScope.currentUser.permission_type === 1) {\n        general.acceptPhoto(id).then(function(data) {\n          var message = data;\n          Flash.create('success', message);\n          // remove this photo from the vm.rejects array\n          vm.rejects.splice(idx, 1);\n          currentPage = vm.currentPage;\n          console.log(idx);\n          console.log(vm.rejects.length);\n          console.log(vm.rejects[idx]);\n          //reset table\n          vm.search();\n          vm.currentPage = currentPage;\n        });\n      }\n\n      else if ($rootScope.currentUser.permission_type === 2) {\n        general.setPhotoToApprovalStatus(\"rejects\", id).then(function(data) {\n          var message = data.message;\n          vm.totalApproves = data.total;\n          Flash.create('success', message);\n          // remove this photo from the vm.accepted array\n          vm.rejects.splice(idx, 1);\n          currentPage = vm.currentPage;\n          console.log(idx);\n          console.log(vm.rejects.length);\n          console.log(vm.rejects[idx]);\n          //reset table\n          vm.search();\n          vm.currentPage = currentPage;\n        });\n      }\n    };\n\n    vm.filterTable = function() {\n      console.log(vm.newFilters);\n      var approved = (vm.newFilters.approved == 0) ? false : true,\n          location = (vm.newFilters.selectedLocation !== undefined) ? vm.newFilters.selectedLocation.originalObject : undefined;\n\n      if (approved !== vm.filters.approved || location !== null) {\n          vm.filters.approved = approved;\n          vm.filters.location.country = (location != undefined) ? location.country : \"\";\n          vm.filters.location.stateRegion = (location != undefined) ? location.stateRegion : \"\";\n          vm.filters.location.city = (location != undefined) ? location.city : \"\";\n          vm.lastPhotoId = null;\n          vm.rejects = [];\n\n          if (approved) {\n            // query approved photos\n            general.getApprovedPhotos(vm.lastPhotoId, vm.filters.location).then(vm.processPhotoData);\n          } else {\n            // query all photos\n            general.getRejectedPhotos(vm.lastPhotoId, vm.filters.location).then(vm.processPhotoData);\n          }\n      }\n    };\n\n    vm.removePhoto = function(id, idx) {\n      if ($rootScope.currentUser.permission_type === 1) {\n          general.removePhoto(id).then(function(data) {\n            console.log(data);\n            var message = data;\n            Flash.create('success', message);\n            // remove this photo from the vm.rejects array\n            vm.rejects.splice(idx, 1);\n            console.log(idx);\n            console.log(vm.rejects.length);\n            console.log(vm.rejects[idx]);\n            currentPage = vm.currentPage;\n\n            //reset table\n\n            vm.search();\n            vm.currentPage = currentPage;\n          });\n      }\n    };\n\n    vm.processPhotoData = function(data) {\n      console.log(data);\n      var photo_url = \"\";\n      var rejects = data.rejectedPhotos;\n      vm.totalApproves = data.totalApproves;\n\n      for (var i=0; i<=rejects.length; i++) {\n        if (rejects[i] !== undefined) {\n          rejects[i].photo_data = JSON.parse(rejects[i].photo_data);\n          photo_url = \"https://farm\" + rejects[i].photo_data.farm + \".staticflickr.com/\" + rejects[i].photo_data.server + \"/\" + rejects[i].photo_data.id + \"_\" + rejects[i].photo_data.secret + \".jpg\";\n\n          rejects[i].approved = (rejects[i].approved !== null) ? Boolean(rejects[i].approved) : false;\n          rejects[i].photo_data = photo_url;\n          rejects[i].index = i;\n\n          if (i === (rejects.length-1)) {\n            vm.lastPhotoId = rejects[i].id;\n          }\n          console.log(photo_url);\n        }\n      }\n\n      if (vm.rejects.length === 0) {\n          vm.rejects = rejects;\n      } else {\n          vm.rejects = vm.rejects.concat(rejects);\n      }\n      console.log(vm.rejects.length);\n      console.log(vm.rejects);\n      vm.pageTotal = vm.rejects.length / vm.numPerPage;\n      vm.search();\n    };\n\n    general.getRejectedPhotos(vm.lastPhotoId, vm.filters.location).then(vm.processPhotoData);\n    general.getLocations().then(function(data) {\n      console.log(data);\n      vm.locations = data.locations;\n    });\n\n    (init = function() {\n        console.log(\"INIT\");\n        return vm.search(), vm.select(vm.currentPage);\n    });\n  }\n})();\n","(function() {\n\n  angular.module('dashboard.controller', []).controller('dashbardCtrl', [\"$scope\", 'dashboard', dashbardCtrl]);\n\n  function dashbardCtrl($scope, dashboard) {\n\n    var pieColors = [\"#383d43\", \"#db5031\", \"#c1bfc0\"];\n\n    /*$scope.chartjsPie = [{\n      value: 4,\n      color:\"#383d43\",\n      highlight: \"#383d43\",\n      label: \"Blue\"\n    },\n    {\n        value: 12,\n        color: \"#db5031\",\n        highlight: \"#db5031\",\n        label: \"Orange\"\n    },\n    {\n        value: 8,\n        color: \"#c1bfc0\",\n        highlight: \"#c1bfc0\",\n        label: \"Gray\"\n    }];*/\n\n      dashboard.getMusicData().then(function(data) {\n        chartData = [];\n        i = 0;\n        angular.forEach(data, function(value, key) {\n          obj = {\n            value: value.request_amount,\n            color: pieColors[i],\n            highlight: pieColors[i],\n            label: value.name\n          };\n          chartData.push(obj);\n          i++;\n        });\n\n        $scope.chartjsPie = chartData;\n        console.log($scope.chartjsPie);\n\n        //return $scope.chartjsPie;\n      });\n\n    function displayEventHistory() {\n      // get data from dashboard service\n\n    }\n\n    function displayTipStats() {\n      // get data from dashboard service\n    }\n\n\n\n  }\n\n})();\n","(function() {\n\n  angular.module('datepicker.controller', []).controller('datepickerCtrl', ['$scope', datepickerCtrl]);\n\n  function datepickerCtrl($scope) {\n    console.log(\"datepicker\");\n    return $scope.today = function() {\n                $scope.dt = new Date();\n            }, $scope.today(), $scope.showWeeks = !0, $scope.toggleWeeks = function() {\n                $scope.showWeeks = !$scope.showWeeks;\n            }, $scope.clear = function() {\n                $scope.dt = null;\n            }, $scope.disabled = function(date, mode) {\n                return \"day\" === mode && (0 === date.getDay() || 6 === date.getDay());\n            }, $scope.toggleMin = function() {\n                var _ref;\n                $scope.minDate = null !== (_ref = $scope.minDate) ? _ref : {\n                    \"null\": new Date()\n                };\n            }, $scope.toggleMin(), $scope.open = function($event) {\n                return $event.preventDefault(), $event.stopPropagation(), $scope.opened = !0;\n            }, $scope.dateOptions = {\n                \"year-format\": \"'yy'\",\n                \"starting-day\": 1\n            }, $scope.formats = [\"dd-MMMM-yyyy\", \"yyyy/MM/dd\", \"shortDate\"], $scope.format = $scope.formats[0];\n        \n  }\n\n})();\n","(function() {\n\n  angular.module('signUp.controller', []).controller('signUpCtrl', ['$scope', '$http', signUpCtrl]);\n\n\n    function signUpCtrl($scope, $http) {\n          var original;\n          var url = 'http://localhost:3000/register';\n          var user = { name : \"Loyd\", password: \"Cherries\" };\n          return $scope.user = {\n              name: \"\",\n              email: \"\",\n              password: \"\",\n              confirmPassword: \"\",\n              age: \"\"\n          }, $scope.showInfoOnSubmit = !1, original = angular.copy($scope.user), $scope.revert = function() {\n              return $scope.user = angular.copy(original), $scope.form_signup.$setPristine(), $scope.form_signup.confirmPassword.$setPristine();\n          }, $scope.canRevert = function() {\n              return !angular.equals($scope.user, original) || !$scope.form_signup.$pristine;\n          }, $scope.canSubmit = function() {\n              return $scope.form_signup.$valid && !angular.equals($scope.user, original);\n          }, $scope.submitForm = function() {\n\n              $http.post(url, user)\n                .success(function(res) {\n                  console.log(res);\n                })\n                .error(function(err) {\n                  alert('issues');\n                });\n\n            //  return $scope.showInfoOnSubmit = !0, $scope.revert();\n          };\n    }\n\n})();\n","(function() {\n\n  angular.module('timepicker.controller', []).controller('timepickerCtrl', ['$scope', timepickerCtrl]);\n\n  function timepickerCtrl($scope) {\n      return $scope.mytime = new Date(), $scope.hstep = 1, $scope.mstep = 15, $scope.options = {\n          hstep: [1, 2, 3],\n          mstep: [1, 5, 10, 15, 25, 30]\n      }, $scope.ismeridian = !0, $scope.toggleMode = function() {\n          $scope.ismeridian = !$scope.ismeridian;\n      }, $scope.update = function() {\n          var d;\n          return d = new Date(), d.setHours(14), d.setMinutes(0), $scope.mytime = d;\n      }, $scope.changed = function() {\n          return void 0;\n      }, $scope.clear = function() {\n          $scope.mytime = null;\n      };\n  }\n\n})();\n"],"sourceRoot":"/source/"}